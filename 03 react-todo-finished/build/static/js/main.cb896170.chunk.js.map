{"version":3,"sources":["store/actions.js","store/reducers.js","store/store.js","utils.js","components/Header.jsx","components/ToggleTodo.jsx","components/EditInput.jsx","components/Todo.jsx","components/VisibleTodoList.jsx","components/Filters.jsx","components/ClearCompleted.jsx","components/Footer.jsx","Main.js","App.js","registerServiceWorker.js","index.js"],"names":["addTodo","todo","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","type","stop","_x","apply","this","arguments","removeTodo","id","_ref2","_callee2","_context2","_x2","updateTodo","_ref3","_callee3","_context3","_x3","toggleAllTodos","completed","_ref4","_callee4","_context4","_x4","clearCompleted","_ref5","_callee5","_context5","_x5","toggleFilter","activatedFilter","_ref6","_callee6","_context6","_x6","combineReducers","todos","length","undefined","action","concat","toConsumableArray","filter","map","get","objectSpread","t","filters","all","active","defineProperty","persistConfig","key","storage","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","thunk","logger","persistor","persistStore","getNewId","array","lastId","maxBy","Header","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","value","setState","handleKeyPress","state","react_default","createElement","className","placeholder","onChange","onKeyPress","Component","ToggleTodo","_this$props","checked","connect","bindActionCreators","EditInput","onBlur","text","resetLiClassName","ref","input","focus","Todo","handleDoubleClick","getLiClassName","editing","components_ToggleTodo","onDoubleClick","onClick","components_EditInput","nextProps","nextCompleted","_ref$editing","classNames","VisibleTodoList","findKey","f","i","components_Todo","labelText","Filters","window","location","hash","slice","entries","index","slicedToArray","activated","href","charAt","toUpperCase","ClearCompletedButton","display","Footer","activeTodosCount","completedTodosCount","components_Filters","ClearCompleted","Main","handleToggleAllTodos","components_Header","Fragment","htmlFor","components_VisibleTodoList","components_Footer","App","es","integration_react","loading","src_Main","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cb896170.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO'\nexport const REMOVE_TODO = 'REMOVE_TODO'\nexport const UPDATE_TODO = 'UPDATE_TODO'\nexport const TOGGLE_ALL_TODOS = 'TOGGLE_ALL'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\n\nexport const TOGGLE_FILTER = 'TOGGLE_FILTER'\n\nexport const addTodo = todo => async dispatch => {\n  dispatch({ type: ADD_TODO, todo })\n}\n\nexport const removeTodo = id => async dispatch => {\n  dispatch({ type: REMOVE_TODO, id })\n}\n\nexport const updateTodo = todo => async dispatch => {\n  dispatch({ type: UPDATE_TODO, todo })\n}\n\nexport const toggleAllTodos = completed => async dispatch => {\n  dispatch({ type: TOGGLE_ALL_TODOS, completed })\n}\n\nexport const clearCompleted = () => async dispatch => {\n  dispatch({ type: CLEAR_COMPLETED })\n}\n\nexport const toggleFilter = activatedFilter => async dispatch => {\n  dispatch({ type: TOGGLE_FILTER, activatedFilter })\n}\n","import { combineReducers } from 'redux'\nimport { get } from 'lodash'\n\nimport {\n  ADD_TODO,\n  REMOVE_TODO,\n  UPDATE_TODO,\n  TOGGLE_ALL_TODOS,\n  CLEAR_COMPLETED,\n  TOGGLE_FILTER,\n} from './actions'\n\nconst todosReducer = (todos = [], action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...todos, action.todo]\n\n    case REMOVE_TODO:\n      return todos.filter(todo => todo.id !== action.id)\n\n    case UPDATE_TODO:\n      return todos.map(todo =>\n        todo.id === get(action, 'todo.id') ? action.todo : todo\n      )\n\n    case TOGGLE_ALL_TODOS:\n      return todos.map(todo => ({ ...todo, completed: action.completed }))\n\n    case CLEAR_COMPLETED:\n      return todos.filter(t => !t.completed)\n\n    default:\n      return todos\n  }\n}\n\nconst filtersReducer = (\n  filters = {\n    all: true,\n    active: false,\n    completed: false,\n  },\n  action\n) => {\n  switch (action.type) {\n    case TOGGLE_FILTER:\n      return {\n        all: false,\n        active: false,\n        completed: false,\n        [action.activatedFilter]: true,\n      }\n\n    default:\n      return filters\n  }\n}\n\nexport default combineReducers({ todos: todosReducer, filters: filtersReducer })\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport reducers from './reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducers)\n\nexport const store = createStore(\n  persistedReducer,\n  applyMiddleware(thunk, logger)\n)\n\nexport const persistor = persistStore(store)\n","import { get, maxBy } from 'lodash'\n\nexport const getNewId = array => {\n  let lastId = get(maxBy(array, 'id'), 'id', 0)\n  return ++lastId\n}\n","import React, { Component } from 'react'\n\nimport { get } from 'lodash'\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: '',\n    }\n  }\n\n  handleChange = e => {\n    const value = get(e, ['target', 'value'], '')\n    this.setState({\n      value,\n    })\n  }\n\n  handleKeyPress = e => {\n    const { value } = this.state\n    const { addTodo } = this.props\n\n    if (e.key === 'Enter' && value) {\n      addTodo(value)\n      this.setState({ value: '' })\n    }\n  }\n\n  render() {\n    const { value } = this.state\n    return (\n      <header>\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleChange}\n          onKeyPress={this.handleKeyPress}\n          value={value}\n        />\n      </header>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { updateTodo } from '../store/actions'\n\nclass ToggleTodo extends Component {\n  render() {\n    const { todo, updateTodo } = this.props\n    return (\n      <input\n        className=\"toggle\"\n        type=\"checkbox\"\n        checked={todo.completed}\n        onChange={() => updateTodo({ ...todo, completed: !todo.completed })}\n      />\n    )\n  }\n}\n\nexport default connect(\n  ({ todos }) => ({ todos }),\n  dispatch =>\n    bindActionCreators(\n      {\n        updateTodo,\n      },\n      dispatch\n    )\n)(ToggleTodo)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { get } from 'lodash'\n\nimport { updateTodo } from '../store/actions'\n\nclass EditInput extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: get(props, 'todo.text', ''),\n    }\n  }\n\n  onChange = e => {\n    const value = get(e, 'target.value', '')\n    this.setState({ value })\n  }\n\n  onBlur = () => {\n    const { value: text } = this.state\n    const { todo, updateTodo, resetLiClassName } = this.props\n\n    updateTodo({\n      ...todo,\n      text,\n    })\n\n    resetLiClassName()\n  }\n\n  onKeyPress = e => {\n    if (e.key === 'Enter') {\n      this.onBlur()\n    }\n  }\n\n  render() {\n    return (\n      <input\n        className=\"edit\"\n        ref={input => input && input.focus()}\n        value={this.state.value}\n        onChange={this.onChange}\n        onBlur={this.onBlur}\n        onKeyPress={this.onKeyPress}\n      />\n    )\n  }\n}\n\nexport default connect(\n  ({ todos }) => ({ todos }),\n  dispatch =>\n    bindActionCreators(\n      {\n        updateTodo,\n      },\n      dispatch\n    )\n)(EditInput)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport classNames from 'classnames'\n\nimport ToggleTodo from './ToggleTodo'\nimport EditInput from './EditInput'\n\nimport { removeTodo } from '../store/actions'\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props)\n    const {\n      todo: { completed },\n    } = props\n\n    this.state = {\n      completed,\n      className: getLiClassName({ completed }),\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    const {\n      todo: { completed: nextCompleted },\n    } = nextProps\n\n    const prevCompleted = state.completed\n\n    if (nextCompleted !== prevCompleted) {\n      return {\n        className: getLiClassName({ completed: nextCompleted }),\n        completed: nextCompleted,\n      }\n    }\n\n    return null\n  }\n\n  handleDoubleClick = () => {\n    const { completed } = this.state\n    this.setState({\n      className: getLiClassName({ completed, editing: true }),\n    })\n  }\n\n  resetLiClassName = () => {\n    const { completed } = this.state\n    this.setState({\n      className: getLiClassName({ completed }),\n    })\n  }\n\n  render() {\n    const { className } = this.state\n    const { todo, removeTodo } = this.props\n\n    return (\n      <li className={className}>\n        <div className=\"view\">\n          <ToggleTodo todo={todo} />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={() => removeTodo(todo.id)} />\n        </div>\n        <EditInput todo={todo} resetLiClassName={this.resetLiClassName} />\n      </li>\n    )\n  }\n}\n\nconst getLiClassName = ({ completed, editing = false }) =>\n  classNames({\n    completed,\n    editing,\n  })\n\nexport default connect(\n  ({ todos }) => ({ todos }),\n  dispatch =>\n    bindActionCreators(\n      {\n        removeTodo,\n      },\n      dispatch\n    )\n)(Todo)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { findKey } from 'lodash'\n\nimport Todo from './Todo'\n\nclass VisibleTodoList extends Component {\n  render() {\n    const { todos, filters } = this.props\n\n    const filter = findKey(filters, f => f)\n\n    return (\n      <ul className=\"todo-list\">\n        {todos.map((todo, i) => {\n          if (filter === 'active' && todo.completed) return false\n          if (filter === 'completed' && !todo.completed) return false\n\n          return (\n            <Todo\n              key={i}\n              todo={todo}\n              checked={todo.completed}\n              labelText={todo.text}\n            />\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default connect(\n  ({ todos, filters }) => ({ todos, filters }),\n  null\n)(VisibleTodoList)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { toggleFilter } from '../store/actions'\n\nclass Filters extends Component {\n  componentDidMount() {\n    const filter = window.location.hash.slice(2)\n\n    if (filter) this.props.toggleFilter(filter)\n  }\n\n  render() {\n    const { filters, toggleFilter } = this.props\n\n    return (\n      <ul className=\"filters\">\n        {Object.entries(filters).map(([filter, activated], index) => {\n          return (\n            <li key={index}>\n              <a\n                href={'#/' + (filter === 'all' ? '' : filter)}\n                className={activated ? 'selected' : ''}\n                onClick={() => toggleFilter(filter)}>\n                {filter.charAt(0).toUpperCase() + filter.slice(1)}\n              </a>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default connect(\n  ({ filters }) => ({ filters }),\n  dispatch =>\n    bindActionCreators(\n      {\n        toggleFilter,\n      },\n      dispatch\n    )\n)(Filters)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { clearCompleted } from '../store/actions'\n\nclass ClearCompletedButton extends Component {\n  render() {\n    const { display, clearCompleted } = this.props\n\n    if (!display) return null\n\n    return (\n      <button className=\"clear-completed\" onClick={clearCompleted}>\n        Clear completed\n      </button>\n    )\n  }\n}\n\nexport default connect(\n  ({ todos, filters }) => ({ todos, filters }),\n  dispatch =>\n    bindActionCreators(\n      {\n        clearCompleted,\n      },\n      dispatch\n    )\n)(ClearCompletedButton)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport Filters from './Filters'\nimport ClearCompletedButton from './ClearCompleted'\n\nimport { toggleFilter, clearCompleted } from '../store/actions'\n\nclass Footer extends Component {\n  render() {\n    const { todos, activeTodosCount, completedTodosCount } = this.props\n\n    const display = !!todos.length\n\n    if (!display) return null\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{activeTodosCount}</strong>\n          <span>{activeTodosCount === 1 ? ' item' : ' items'} left</span>\n        </span>\n        <Filters />\n        <ClearCompletedButton display={completedTodosCount} />\n      </footer>\n    )\n  }\n}\n\nexport default connect(\n  ({ todos, filters }) => ({ todos, filters }),\n  dispatch =>\n    bindActionCreators(\n      {\n        toggleFilter,\n        clearCompleted,\n      },\n      dispatch\n    )\n)(Footer)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport '../node_modules/todomvc-common/base.css'\nimport '../node_modules/todomvc-app-css/index.css'\n\nimport { getNewId } from './utils'\n\nimport Header from './components/Header'\nimport VisibleTodoList from './components/VisibleTodoList'\nimport Footer from './components/Footer'\n\nimport {\n  addTodo,\n  removeTodo,\n  updateTodo,\n  toggleAllTodos,\n  clearCompleted,\n  toggleFilter,\n} from './store/actions'\n\nclass Main extends Component {\n  addTodo = text => {\n    const { todos } = this.props\n\n    this.props.addTodo({\n      id: getNewId(todos),\n      text,\n      completed: false,\n    })\n  }\n\n  activeTodosCount = () => {\n    const { todos } = this.props\n    return todos.filter(t => !t.completed).length\n  }\n\n  handleToggleAllTodos = () => {\n    const { toggleAllTodos } = this.props\n\n    const activeTodosCount = this.activeTodosCount()\n\n    const completed = activeTodosCount ? true : false\n    toggleAllTodos(completed)\n  }\n\n  render() {\n    const { todos } = this.props\n\n    const activeTodosCount = this.activeTodosCount()\n    const todosCount = todos.length\n    const completedTodosCount = todosCount - activeTodosCount\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n        <section className=\"main\">\n          {todos.length ? (\n            <React.Fragment>\n              <input\n                className=\"toggle-all\"\n                type=\"checkbox\"\n                checked={!activeTodosCount}\n                onChange={() => {}}\n              />\n              <label onClick={this.handleToggleAllTodos} htmlFor=\"toggle-all\" />\n            </React.Fragment>\n          ) : null}\n          <VisibleTodoList />\n        </section>\n        <Footer\n          activeTodosCount={activeTodosCount}\n          completedTodosCount={completedTodosCount}\n        />\n      </section>\n    )\n  }\n}\n\nexport default connect(\n  ({ todos, filters }) => ({ todos, filters }),\n  dispatch =>\n    bindActionCreators(\n      {\n        addTodo,\n        removeTodo,\n        updateTodo,\n        toggleAllTodos,\n        clearCompleted,\n        toggleFilter,\n      },\n      dispatch\n    )\n)(Main)\n","import React, { Component } from 'react'\n\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from './store/store'\nimport Main from './Main'\n\nclass App extends Component {\n  render() {\n    return (\n      <ReduxProvider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Main />\n        </PersistGate>\n      </ReduxProvider>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}